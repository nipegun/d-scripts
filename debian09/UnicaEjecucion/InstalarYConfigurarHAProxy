#!/bin/bash

# Pongo a disposición pública este script bajo el término de "software
# de dominio público". Puedes hacer lo que te salga de los huevos con él
# porque es libre de verdad; no libre con condiciones como las licencias GNU
# y otras patrañas similares. Si se te llena la boca hablando de libertad
# entonces hazlo realmente libre. No tienes que aceptar ningún tipo de términos
# de uso o licencia para utilizarlo o modificarlo porque va sin CopyLeft.

#--------------------------------------------------------
#  SCRIPT DE NIPEGUN PARA INSTALAR Y CONFIGURAR HAPROXY
#--------------------------------------------------------

apt-get -y update

# Instalar el paquete necesario
apt-get -y install haproxy

# Hacer copia de seguridad del archivo de configuración
cp /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.bak

# Realizar cambios en la configuración
echo "# FrontEnd HTTP" > /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "frontend wan-http-in" >> /etc/haproxy/haproxy.cfg
echo "  bind *:80" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "  # Web 1" >> /etc/haproxy/haproxy.cfg
echo "  acl acl-nipegun-http hdr_end(host) -i nipegun.com" >> /etc/haproxy/haproxy.cfg
echo "  use_backend be-nipegun-http if acl-nipegun-http" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "  # Web 2" >> /etc/haproxy/haproxy.cfg
echo "  acl acl-hacks4geeks-http hdr_end(host) -i hacks4geeks.com" >> /etc/haproxy/haproxy.cfg
echo "  use_backend be-hacks4geeks-http if acl-hacks4geeks-http" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "# FrontEnd HTTPS" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "frontend wan-https-in" >> /etc/haproxy/haproxy.cfg
echo "  bind *:443" >> /etc/haproxy/haproxy.cfg
echo "  mode tcp" >> /etc/haproxy/haproxy.cfg
echo "  option tcplog" >> /etc/haproxy/haproxy.cfg
echo "  option socket-stats" >> /etc/haproxy/haproxy.cfg
echo "  tcp-request inspect-delay 5s" >> /etc/haproxy/haproxy.cfg
echo "  tcp-request content accept if { req_ssl_hello_type 1 }" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "  # Webs" >> /etc/haproxy/haproxy.cfg
echo "  use_backend be-https-nipegun     if { req_ssl_sni -i nipegun.com }" >> /etc/haproxy/haproxy.cfg
echo "  use_backend be-https-hacks4geeks if { req_ssl_sni -i hacks4geeks.com }" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "# BackEnds HTTP" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "backend be-nipegun-http" >> /etc/haproxy/haproxy.cfg
echo "  balance roundrobin" >> /etc/haproxy/haproxy.cfg
echo "  option httpclose" >> /etc/haproxy/haproxy.cfg
echo "  option forwardfor" >> /etc/haproxy/haproxy.cfg
echo "  server srv-nipegun-http 192.168.0.200:80 maxconn 32" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "backend be-hacks4geeks-http" >> /etc/haproxy/haproxy.cfg
echo "  balance roundrobin" >> /etc/haproxy/haproxy.cfg
echo "  option httpclose" >> /etc/haproxy/haproxy.cfg
echo "  option forwardfor" >> /etc/haproxy/haproxy.cfg
echo "  server srv-hacks4geeks-http 192.168.0.201:80 maxconn 32" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "# BackEnds HTTPS" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "backend be-https-nipegun" >> /etc/haproxy/haproxy.cfg
echo "  mode tcp" >> /etc/haproxy/haproxy.cfg
echo "  option tcplog" >> /etc/haproxy/haproxy.cfg
echo "  stick-table type binary len 32 size 30k expire 30m" >> /etc/haproxy/haproxy.cfg
echo "  acl clienthello req_ssl_hello_type 1" >> /etc/haproxy/haproxy.cfg
echo "  acl serverhello rep_ssl_hello_type 2" >> /etc/haproxy/haproxy.cfg
echo "  tcp-request inspect-delay 5s" >> /etc/haproxy/haproxy.cfg
echo "  tcp-request content accept if clienthello" >> /etc/haproxy/haproxy.cfg
echo "  tcp-response content accept if serverhello" >> /etc/haproxy/haproxy.cfg
echo "  stick on payload_lv(43,1) if clienthello" >> /etc/haproxy/haproxy.cfg
echo "  stick store-response payload_lv(43,1) if serverhello" >> /etc/haproxy/haproxy.cfg
echo "  option ssl-hello-chk" >> /etc/haproxy/haproxy.cfg
echo "  server srv-nipegun-https 192.168.0.200" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg
echo "backend be-https-hacks4geeks" >> /etc/haproxy/haproxy.cfg
echo "  mode tcp" >> /etc/haproxy/haproxy.cfg
echo "  option tcplog" >> /etc/haproxy/haproxy.cfg
echo "  stick-table type binary len 32 size 30k expire 30m" >> /etc/haproxy/haproxy.cfg
echo "  acl clienthello req_ssl_hello_type 1" >> /etc/haproxy/haproxy.cfg
echo "  acl serverhello rep_ssl_hello_type 2" >> /etc/haproxy/haproxy.cfg
echo "  tcp-request inspect-delay 5s" >> /etc/haproxy/haproxy.cfg
echo "  tcp-request content accept if clienthello" >> /etc/haproxy/haproxy.cfg
echo "  tcp-response content accept if serverhello" >> /etc/haproxy/haproxy.cfg
echo "  stick on payload_lv(43,1) if clienthello" >> /etc/haproxy/haproxy.cfg
echo "  stick store-response payload_lv(43,1) if serverhello" >> /etc/haproxy/haproxy.cfg
echo "  option ssl-hello-chk" >> /etc/haproxy/haproxy.cfg
echo "  server srv-nipegun-https 192.168.0.201" >> /etc/haproxy/haproxy.cfg
echo "" >> /etc/haproxy/haproxy.cfg

# Reiniciar HAProxy
service haproxy restart

